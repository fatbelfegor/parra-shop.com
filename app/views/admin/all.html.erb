<script type="text/javascript">
	<% if @page %>
		<%= raw render(template: "admin/templates/#{@page}", formats: 'js') %>
	<% end %>
	function data () { return eval(
		<%= raw @data.to_json %>
	)}
	<% models = {}
		habtm = {}
		for model in ActiveRecord::Base.descendants
			name = model.to_s
			if name[0] != '#' and name != 'ActiveRecord::SchemaMigration'
				underscore = name.underscore
				if name.include? '::HABTM_'
					habtm_name = underscore.split('/habtm_').map{|m| m.singularize}.join('_')
					habtm[habtm_name] = {}
				else
					columns = []
					for c in model.columns
						columns << {name: c.name, type: c.type, null: c.null, default: c.default}
					end
					models[underscore] = {
						name: name,
						singularize: underscore,
						pluralize: underscore.pluralize,
						columns: columns,
						belongs_to: model.reflect_on_all_associations(:belongs_to).map{|m| {m.name => false}},
						has_many: model.reflect_on_all_associations(:has_many).map{|m| {m.name.to_s.singularize => false}}
					}
					models[underscore][:habtm] = {}
					for m in model.reflect_on_all_associations(:has_and_belongs_to_many).map(&:name)
						models[underscore][:habtm][m.to_s.singularize] = []
					end
					if @records and @records[underscore]
						models[underscore][:records] = @records[underscore][:records]
						models[underscore][:children] = @records[underscore][:children] if @records[underscore][:children]
						if @records[underscore][:habtm]
							for k, v in @records[underscore][:habtm]
								models[underscore][:habtm][k] = v
							end
						end
						models[underscore][:full] = @records[underscore][:full]
					else
						models[underscore][:records] = []
						models[underscore][:full] = {}
					end
				end
			end
		end %>
	tables = <%= raw models.to_json %>
	habtm = <%= raw habtm.to_json %>
	me = <%= raw current_user.to_json %>
</script>