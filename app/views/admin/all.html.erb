<script type="text/javascript">
	<% if @page %>
		<%= raw render(template: "admin/templates/#{@page}", formats: 'js') %>
	<% end %>
	function data () { return eval(
		<%= raw @data.to_json %>
	)}
	models = {}
	<% @ready ||= {}
	for model in ActiveRecord::Base.descendants
		name = model.to_s
		underscore = name.underscore
		if name[0] != '#' and name != 'ActiveRecord::SchemaMigration'
			if !name.include? '::HABTM_'
			belongs_to = model.reflect_on_all_associations(:belongs_to).map{|m| m.name}
			has_and_belongs_to_many = model.reflect_on_all_associations(:has_and_belongs_to_many).map{|m| m.name}
			has_many = model.reflect_on_all_associations(:has_many).map{|m| {name: m.name, options: m.options}} %>
			models["<%= underscore %>"] = {
				name: "<%= underscore %>",
				classify: "<%= name %>",
				pluralize: "<%= underscore.pluralize %>",
				columns: <%= raw model.columns.map{|c| {name: c.name, type: c.type}}.to_json %>,
				templates: {},
				ready:
				<% if @ready[underscore] %>
				<%= raw({all: false, where: {}, null: []}.merge(@ready[underscore]).to_json) %>
				<% else %>
					{all: false,
					where: {},
					null: []}
				<% end %>,
				collection: {},
				collect: function(rec){
					record.collect(this, rec)
				},
				all: function(options, cb){
					return record.all(this, options, cb)
				},
				find: function(ids) {
					return record.find(this, ids)
				},
				where: function(params) {
					return record.where(this, params)
				},
				update: function(params, msg, cb) {
					record.update(this, params, msg, cb)
				},
				create: function(params, msg, cb) {
					record.create(this, params, msg, cb)
				},
				destroy: function(id, params) {
					record.destroy(this, id, params)
				},
				belongs_to: <%= raw belongs_to.to_json %>,
				has_many: <%= raw (has_many.map{|m| m[:name]} + has_and_belongs_to_many).to_json %>
				<% for m in belongs_to %>
				,
				<%= m %>: function(){
					return record.belongs_to("<%= m %>", this)
				}
				<% end %>
				<% for m in has_many %>
				,
				<%= m[:name] %>: function(){
					<% if m[:options][:as] %>
					return record.has_many_as("<%= name %>", "<%= m[:name] %>", "<%= m[:options][:as] %>", this)
					<% else %>
					return record.has_many("<%= underscore %>", "<%= m[:name] %>", this)
					<% end %>
				}
				<% end %>
				<% for m in has_and_belongs_to_many %>
				,
				<%= m %>: function(){
					return record.has_many("<%= underscore %>", "<%= m %>", this)
				}
				<% end %>
			}
			<% end 
		end
	end %>
	me = <%= raw current_user.to_json %>
	authenticity_token = '<%= form_authenticity_token %>';
</script>